<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yy.master.modules.sys.dao.OrgDeptDao">
    
	<sql id="orgDeptColumns">
		a.id AS "id",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.dept_name AS "deptName",
		a.dept_code AS "deptCode",
		a.dept_propertity AS "deptPropertity",
		a.org_id AS "orgId",
		a.sort as "sort",
		a.input_code AS "inputCode",
		a.clinic_attr AS "clinicAttr",
		a.outp_or_inp AS "outpOrInp",
		a.internal_or_serger AS "internalOrSerger",
		a.del_flag AS "delFlag",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		p.dept_name AS "parent.deptName"
	</sql>
	
	<sql id="orgDeptJoins">
        LEFT JOIN org_dept p ON p.id = a.parent_id
	</sql>

    <select id="getLowLevelDeptList" resultType="OrgDept">
        SELECT *
        FROM org_dept a
        WHERE a.del_flag = '0'
        AND a.parent_id &lt;&gt; '0'
        <if test="orgId != null and orgId != ''">
            AND a.org_id = #{orgId}
        </if>
        ORDER BY LENGTH(a.input_code),a.input_code
    </select>
    
	<select id="get" resultType="OrgDept">
		SELECT 
			<include refid="orgDeptColumns"/>
		FROM org_dept a
		<include refid="orgDeptJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="OrgDept">
		SELECT 
			<include refid="orgDeptColumns"/>
		FROM org_dept a
		<include refid="orgDeptJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
            and a.org_id=#{orgId}
            <if test="powerDeptIdsList!=null and powerDeptIdsList!=''">
                and a.id in <foreach collection="powerDeptIdsList" item="item" index="index"
                                           open="(" separator="," close=")">#{item}</foreach>
            </if>
            <if test="outpOrInps!=null and outpOrInps!=''">
               and a.outp_or_inp in
                <foreach collection="outpOrInps" item="outpOrInpStr" index="index"
                                             open="(" close=")" separator=",">
                #{outpOrInpStr}
            </foreach>
            </if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				 ORDER BY a.sort,a.parent_id,a.create_date DESC
			</otherwise>
		</choose>
	</select>
    <select id="findByParentIdsLike" resultType="OrgDept">
        SELECT
        <include refid="orgDeptColumns"/>
        FROM org_dept a
        <include refid="orgDeptJoins"/>
        WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds} and a.org_id=#{orgId}  ORDER BY a.sort DESC
    </select>
	<select id="findAllList" resultType="OrgDept">
		SELECT 
			<include refid="orgDeptColumns"/>
		FROM org_dept a
		<include refid="orgDeptJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<select id="findId" resultType="OrgDept">
		SELECT
		<include refid="orgDeptColumns"/>
		FROM org_dept a
		<include refid="orgDeptJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="deptName!=null and deptName!=''">
				AND a.dept_name=#{deptName}
			</if>
		</where>

	</select>
	<insert id="insert">
		INSERT INTO org_dept(
			id,
			parent_id,
			parent_ids,
			dept_name,
			dept_code,
			dept_propertity,
			org_id,
			input_code,
			sort,
			clinic_attr,
			outp_or_inp,
			internal_or_serger,
			del_flag,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks
		) VALUES (
			#{id},
			#{parent.id},
			#{parentIds},
			#{deptName},
			#{deptCode},
			#{deptPropertity},
			#{orgId},
			#{inputCode},
			#{sort},
			#{clinicAttr},
			#{outpOrInp},
			#{internalOrSerger},
			#{delFlag},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE org_dept SET
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			dept_name = #{deptName},
			dept_code = #{deptCode},
			dept_propertity = #{deptPropertity},
			org_id = #{orgId},
			sort=#{sort},
			input_code = #{inputCode},
			clinic_attr = #{clinicAttr},
			outp_or_inp = #{outpOrInp},
			internal_or_serger = #{internalOrSerger},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE org_dept SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
    <select id="roleDept" resultType="OrgDept">
        SELECT DISTINCT od.id AS "id",
		od.parent_id AS "parent.id",
		od.parent_ids AS "parentIds",
		od.dept_name AS "deptName",
		od.dept_code AS "deptCode",
		od.dept_propertity AS "deptPropertity",
		od.org_id AS "orgId",
		od.sort as "sort",
		od.input_code AS "inputCode",
		od.clinic_attr AS "clinicAttr",
		od.outp_or_inp AS "outpOrInp",
		od.internal_or_serger AS "internalOrSerger",
		od.del_flag AS "delFlag",
		od.create_by AS "createBy.id",
		od.create_date AS "createDate",
		od.update_by AS "updateBy.id",
		od.update_date AS "updateDate",
		od.remarks AS "remarks" FROM org_dept od ,org_group_vs_dept vd,org_group_vs_user vu
        WHERE vd.group_id=vu.group_id AND od.id=vd.dept_id AND vu.user_id=#{userId} AND od.del_flag='0'
        ORDER BY od.sort,od.parent_id,od.create_date DESC
    </select>
	
</mapper>